if(arrNum[] -1) ==1);
     return 1;
    if(num > 1){
        sum = num +=addNum(num);
        return sum;
        }
        
//int addNum(int num){
//    int sum=0;
//         if(num  == 0){
//             return 1;
//         }
//             for (int i=0; i < num; i++) {
//                 sum = num+=addNum(i));
//                 return sum;
//             }
//         }
//    }
// }

int findSum(){
    int sum=0;
    cout << "\n\n Find the first 10 natural numbers:\n";
    cout << "---------------------------------------\n";
    cout << " The natural numbers are: \n";
    for (int i = 1; i <= 10; i++) 
    {
        if(int i = 1)
            return 1;
        if(int i >1)
		  sum=sum+i;
    }
    return sum; 
}


// Function to check sum of digit using recursion  
int sumInts(int n)  
{  
    if (n == 0)  
    return 0;  
    return (n % 10 + sumInts(n / 10));  
}  

/* Recursive C++ program to find sum of digits   of a number  */
#include <bits/stdc++.h>  
using namespace std;  
  
// Function to check sum of digit using recursion  
int sum_of_digit(int n)  
{  
    if (n == 0)  
    return 0;  
    return (n % 10 + sum_of_digit(n / 10));  
}  
  
// Driver code  

int main()  
{  
    int num = 12345;  
    int result = sum_of_digit(num);  
    cout << "Sum of digits in "<< num  <<" is "<<result << endl;  
    
    return 0;  
}  
  